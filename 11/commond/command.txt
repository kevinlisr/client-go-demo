kubectl create deploy ingress-manager --image=kevinstudy/ingress-manager:v1.0.0 --dry-run=client -o yaml > /root/baidingyunyuansheng/client-go-demo/11/manifests/ingress-manager.yml
kubectl apply -f manifests/ingress-manager.yml

kubectl create sc ingress-manager-sa --dry-run=client -oyaml >manifests/ingress-manager-sa.yml

edit ingress-manager deployment

template.spec  add serviceAccountName: ingress-manager-sa

kubectl create clusterrole ingress-manager-role --resource=ingress,service --verb list,watch,create,update,delete --dry-run=client -oyaml >manifests/ingress-manager-role.yml
(kubectl create role ingress-manager-role --resource=ingress,service --verb list,watch,create,update,delete --dry-run=client -oyaml >manifests/ingress-manager-role.yml)

open ingress-manager-role.yml
delete services create,update,delete

kubectl create clusterrolebinding  ingress-manager-clusterrolebinding --clusterrole ingress-manager-role --serviceaccount default:ingress-manager-sa  --dry-run=client -oyaml > manifests/ingress-manager-clusterrole-binding.yml
(kubectl create rolebinding  ingress-manager-rolebinding --role ingress-manager-role --serviceaccount default:ingress-manager-sa  --dry-run=client -oyaml  > manifests/ingress-manager-clusterrole-binding.yml)

edit servieAccount
add namespace: default

kubectl apply -f manifests